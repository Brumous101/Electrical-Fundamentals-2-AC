v.03

chapter_14_a_odd_practice_problems.mpws



Complete all of the problems in this worksheet by
placing the code you write for each exercise into
the empty fold which is provided in each exercise
section. Each empty fold has a subtype attribute
named "exercise". Immediately below each empty
fold is a mathpiper_grade fold that contains code
which will automatically grade the code you place
into the fold above it.

========================
- micro <ctrl>+; to get μ.

- ohm <ctrl>+; to get Ω.

- angle <ctrl>+; to get ∠. (p.272, p.980)

- theta <ctrl>+; to get ϴ.

- Compound units need to be in parentheses: 25~(mA/s) instead of 25~mA/s

1. 7V ϴ 90 deg
3. 120 ohm ϴ 90 deg.
5. 400 ohm ϴ 90 deg.
7. V?L = 4 V ϴ 90 deg, V?C = 2.75 V ϴ -90 deg, V?S = 1.25 V ϴ 90 deg.
9. V?L = 2.36 V ϴ 90 deg, V?C = 1.27 V ϴ -90 deg, V?S = 1.09 V ϴ 90 deg.
11. 47 mA ϴ -90 deg.
13. 450 ohm ϴ -90 deg.




%group,name="Problem 0",description="Programmer's information."
========================================================================================================
Problem 0

In the following fold, replace "xxx" with your
first name, replace "yyy" with your last name, and
replace "000000" with your SSU ID number:

%mathpiper,name="Problem 0",subtype="problem",unassign_all="true",truncate="6000",timeout="5000"

[
["firstName", "Kyle"],
["lastName", "Johnson"],
["ssuIDNumber", "264694"],
];

%/mathpiper

    %output,parent="Problem 0",mpversion="281",preserve="false"
      Result: [["firstName","Kyle"],["lastName","Johnson"],["ssuIDNumber","264694"]]
.   %/output







%mathpiper_grade,name="Problem 0"

LocalSymbols(foldResult)
{
    // --------------------------------------------------------
    
    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch(foldResult := Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }
    
    // --------------------------------------------------------
    
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }
    
    //-----------------------------------------------------------------------------------------    
    

    FoldGrade("The code does not produce side effect output", 1, False)
    LocalSymbols(procedureNames)
    {
        procedureNames := ProcedureList(?foldCode);
        
        !? Contains?(procedureNames,"Echo") &? !? Contains?(procedureNames,"Write") &? !? Contains?(procedureNames,"UnparseMath2D");
    }
    
    // --------------------------------------------------------
    
    FoldGrade("The variable 'firstName' a string that is not 'xxx'", 1, True)
    {
        String?(foldResult["firstName"]) &? foldResult["firstName"] !=? "xxx";
    }
    
    // --------------------------------------------------------
    
    FoldGrade("The variable 'lastName' is a string that is not 'yyy'", 1, True)
    {
        String?(foldResult["lastName"]) &? foldResult["lastName"] !=? "yyy";
    }
    
    // --------------------------------------------------------
    
    FoldGrade("The variable 'ssuIDNumber' is not '000000'", 1, True)
    {
        foldResult["ssuIDNumber"] !=? "000000" &? foldResult["ssuIDNumber"] !=? 0;
    }
}

%/mathpiper_grade

    %output,parent="Problem 0",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not produce side effect output. (1/1)
        PASS: The variable 'firstName' a string that is not 'xxx'. (1/1)
        PASS: The variable 'lastName' is a string that is not 'yyy'. (1/1)
        PASS: The variable 'ssuIDNumber' is not '000000'. (1/1)
      
        11/11 passes
.   %/output

%/group







%group,name="Problem 1",description="p.455."
========================================================================================================

[V?S, ϴ?V?S]


%mathpiper,name="Problem 1",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbVj9TLCDPtD9WP1NdKQp7CiAgICBGb3JtdWxhcygpCiAgICB7ICAgCiAgICAgICAgZjE0PzEgOj0gRm9ybXVsYShWP1N+ViA9PSBWP0x+ViAtIFY/Q35WLCBMYWJlbDoiMTQuMSIsIFBhZ2U6IjQyNCIpOwogICAgfQogICAgCiAgICBWP0wgOj0gMTB+VjsKICAgIAogICAgVj9DIDo9IDN+VjsKICAgIAogICAgVj9TIDo9IEFicyhFdmFsdWF0ZUZvcm11bGEoZjE0PzEpKTsKICAgIAogICAgz7Q/Vj9TIDo9IExDU2VyaWVzUGhhc2UoVj9MLCBWP0MpOwp9Cgo=");

%/mathpiper

    %output,parent="Problem 1",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 1",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([V?S, ϴ?V?S])
{
    Formulas()
    {
        f14?1 := Formula(V?S~V == V?L~V - V?C~V, Label:"14.1", Page:"424", Description:"Series.");
    }
    
    V?L := 10~V;
    
    V?C := 3~V;
    
    V?S := Abs(EvaluateFormula(f14?1));
    
    ϴ?V?S := LCSeriesPhase(V?L, V?C);
}
%/mathpiper

    %output,parent="Problem 1",mpversion="281",preserve="false"
      Result: 90~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      V?S: 7~V
      ϴ?V?S: 90~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                      \
      | ( 14.1 ) ( V?S == V?L - V?C ) ( No Transformation )  |
      \                                                      /
      
      === STEPS (CODE VIEW) ===
       1: (14.1) V?S == V?L - V?C
       2: V?L := 10~V ==> 10~V
       3: V?C := 3~V ==> 3~V
       4: V?S := Abs(EvaluateFormula(f14?1)) ==> 7~V
       5: ϴ?V?S := LCSeriesPhase(V?L, V?C) ==> 90~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 1"

{   

    FoldGrade("MathPiper version >= 281", 1, True)    {        StringToNumber(Version()) >=? 281;    }
    FoldGrade("The code does not throw an exception when evaluated", 1, True)    {        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;    }

    FoldGrade("Formula (14.1) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(V?S_ == (V?L_ - V?C_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?S, 7~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?V?S, 90~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 1",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (14.1) is used. (1/1)
        PASS: A correct value is assigned to V?S. (1/1)
        PASS: A correct value is assigned to ϴ?V?S. (1/1)
      
        10/10 passes
.   %/output

%/group







%group,name="Problem 3",description="p.456."
========================================================================================================

[X?S, ϴ?X?S]


%mathpiper,name="Problem 3",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbWD9TLCDPtD9YP1NdKQp7CiAgICBGb3JtdWxhcygpCiAgICB7ICAgCiAgICAgICAgZjE0PzIgOj0gRm9ybXVsYShYP1N+zqkgPT0gWD9Mfs6pIC0gWD9Dfs6pLCBMYWJlbDoiMTQuMiIsIFBhZ2U6IjQyNiIpOwogICAgfQogICAgCiAgICBYP0wgOj0gMzAwfs6pOwogICAgCiAgICBYP0MgOj0gMTgwfs6pOwogICAgCiAgICBYP1MgOj0gRXZhbHVhdGVGb3JtdWxhKGYxND8yKTsKICAgIAogICAgz7Q/WD9TIDo9IExDU2VyaWVzUGhhc2UoWD9MLCBYP0MpOwp9Cgo=");

%/mathpiper

    %output,parent="Problem 3",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 3",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([X?S, ϴ?X?S])
{
    Formulas()
    {
        f14?2 := Formula(X?S~Ω == X?L~Ω - X?C~Ω, Label:"14.2", Page:"426", Description:"Series.");
    }
    
    X?L := 300~Ω;
    
    X?C := 180~Ω;
    
    X?S := EvaluateFormula(f14?2);
    
    ϴ?X?S := LCSeriesPhase(X?L, X?C);
}
%/mathpiper

    %output,parent="Problem 3",mpversion="281",preserve="false"
      Result: 90~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      X?S: 120~Ω
      ϴ?X?S: 90~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                      \
      | ( 14.2 ) ( X?S == X?L - X?C ) ( No Transformation )  |
      \                                                      /
      
      === STEPS (CODE VIEW) ===
       1: (14.2) X?S == X?L - X?C
       2: X?L := 300~Ω ==> 300~Ω
       3: X?C := 180~Ω ==> 180~Ω
       4: X?S := EvaluateFormula(f14?2) ==> 120~Ω
       5: ϴ?X?S := LCSeriesPhase(X?L, X?C) ==> 90~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 3"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (14.2) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(X?S_ == (X?L_ - X?C_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "X?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(X?S, 120~Ω), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?X?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?X?S, 90~deg), "", ExceptionGet()["message"]);
    }
}


%/mathpiper_grade

    %output,parent="Problem 3",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (14.2) is used. (1/1)
        PASS: A correct value is assigned to X?S. (1/1)
        PASS: A correct value is assigned to ϴ?X?S. (1/1)
      
        10/10 passes
.   %/output

%/group







%group,name="Problem 5",description="p.456."
========================================================================================================

[X?S, ϴ?X?S]


%mathpiper,name="Problem 5",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbWD9TLCDPtD9YP1NdKQp7CiAgICBGb3JtdWxhcygpCiAgICB7ICAgCiAgICAgICAgZjE0PzIgOj0gRm9ybXVsYShYP1N+zqkgPT0gWD9Mfs6pIC0gWD9Dfs6pLCBMYWJlbDoiMTQuMiIsIFBhZ2U6IjQyNiIpOwogICAgfQogICAgCiAgICBYP0wgOj0gMX5rzqk7CiAgICAKICAgIFg/QyA6PSA2MDB+zqk7CiAgICAKICAgIFg/UyA6PSBFdmFsdWF0ZUZvcm11bGEoZjE0PzIsIM6pKTsKICAgIAogICAgz7Q/WD9TIDo9IExDU2VyaWVzUGhhc2UoWD9MLCBYP0MpOwp9Cgo=");

%/mathpiper

    %output,parent="Problem 5",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 5",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([X?S, ϴ?X?S])
{
    Formulas()
    {
        f14?2 := Formula(X?S~Ω == X?L~Ω - X?C~Ω, Label:"14.2", Page:"426", Description:"Series.");
    }
    
    X?L := 1~kΩ;
    
    X?C := 600~ Ω;
    
    X?S := EvaluateFormula(f14?2, Ω);
    
    ϴ?X?S := LCSeriesPhase(X?L, X?C);
}
%/mathpiper

    %output,parent="Problem 5",mpversion="281",preserve="false"
      Result: 90~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      X?S: 400~Ω
      ϴ?X?S: 90~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                      \
      | ( 14.2 ) ( X?S == X?L - X?C ) ( No Transformation )  |
      \                                                      /
      
      === STEPS (CODE VIEW) ===
       1: (14.2) X?S == X?L - X?C
       2: X?L := 1~kΩ ==> 1~kΩ
       3: X?C := 600~Ω ==> 600~Ω
       4: X?S := EvaluateFormula(f14?2, Ω) ==> 400~Ω
       5: ϴ?X?S := LCSeriesPhase(X?L, X?C) ==> 90~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 5"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (14.2) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(X?S_ == (X?L_ - X?C_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "X?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(X?S, 400~Ω), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?X?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?X?S, 90~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 5",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (14.2) is used. (1/1)
        PASS: A correct value is assigned to X?S. (1/1)
        PASS: A correct value is assigned to ϴ?X?S. (1/1)
      
        10/10 passes
.   %/output

%/group






%group,name="Problem 7",description="p.456."
========================================================================================================

[V?L, V?C, V?S, ϴ?V?S]


%mathpiper,name="Problem 7",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbVj9MLCBWP0MsIFY/Uywgz7Q/Vj9TXSkKewogICAgRm9ybXVsYXMoKQogICAgeyAgIAogICAgICAgIGYzPzEgOj0gRm9ybXVsYShJP09MfkEgPT0gVj9PTH5WL1I/T0x+zqksIExhYmVsOiIzLjEiLCBQYWdlOiI3OCIpOwoKICAgICAgICBmMz8xYSA6PSBGb3JtdWxhKGYzPzEsCiAgICAgICAgICAgICAgICAgICAgICAgIExhYmVsOiJhIiwgCiAgICAgICAgICAgICAgICAgICAgICAgIFN1YnN0aXR1dGlvbnM6WydJP09MIDwtICdJP1QsICdWP09MIDwtICdWP0wsICdSP09MIDwtICdYP0xdLAogICAgICAgICAgICAgICAgICAgICAgICBTdWJqZWN0OidWP0wpOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBmMz8xYiA6PSBGb3JtdWxhKGYzPzEsCiAgICAgICAgICAgICAgICAgICAgICAgIExhYmVsOiJiIiwgCiAgICAgICAgICAgICAgICAgICAgICAgIFN1YnN0aXR1dGlvbnM6WydJP09MIDwtICdJP1QsICdWP09MIDwtICdWP0MsICdSP09MIDwtICdYP0NdLAogICAgICAgICAgICAgICAgICAgICAgICBTdWJqZWN0OidWP0MpOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBmMTQ/MSA6PSBGb3JtdWxhKFY/U35WID09IFY/TH5WIC0gVj9DflYsIExhYmVsOiIxNC4xIiwgUGFnZToiNDI0Iik7CiAgICB9CiAgICAKICAgIFg/TCA6PSA4MH5vaG07CiAgICAKICAgIFg/QyA6PSA1NX7OqTsKICAgIAogICAgST9UIDo9IDUwfm1BOwogICAgCiAgICBWP0wgOj0gRXZhbHVhdGVGb3JtdWxhKGYzPzFhLCBWKTsKICAgIAogICAgVj9DIDo9IEV2YWx1YXRlRm9ybXVsYShmMz8xYiwgVik7CiAgICAKICAgIFY/UyA6PSBFdmFsdWF0ZUZvcm11bGEoZjE0PzEpOwogICAgCiAgICDPtD9WP1MgOj0gTENTZXJpZXNQaGFzZShWP0wsIFY/Qyk7Cn0KCg==");

%/mathpiper

    %output,parent="Problem 7",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 7",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([V?L, V?C, V?S, ϴ?V?S])
{
    Formulas()
    {
        f3?1 := Formula(I?OL~A == V?OL~V/R?OL~Ω, Label:"3.1", Page:"78");
        
        f3?1a := Formula(f3?1, Label:"a", Substitutions:['I?OL <- 'I?T, 'V?OL <- 'V?L, 'R?OL <- 'X?L], Subject: 'V?L);
        
        f3?1b := Formula(f3?1, Label:"b", Substitutions:['I?OL <- 'I?T, 'V?OL <- 'V?C, 'R?OL <- 'X?C], Subject: 'V?C);
        
        f14?1 := Formula(V?S~V == V?L~V - V?C~V, Label:"14.1", Page:"424", Description:"Series.");
    }
    
    X?L := 80~Ω;
    
    X?C := 55~Ω;
    
    I?T := 50~mA;
    
    V?L := EvaluateFormula(f3?1a, V);
    
    V?C := EvaluateFormula(f3?1b, V);
    
    V?S := EvaluateFormula(f14?1);
    
    ϴ?V?S := LCSeriesPhase(V?L, V?C);
}
%/mathpiper

    %output,parent="Problem 7",mpversion="281",preserve="false"
      Result: 90~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      V?L: 4~V
      V?C: 2.75~V
      V?S: 1.25~V
      ϴ?V?S: 90~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                      \
      | ( 3.1 )  /         V?OL \     ( No Transformation )  |
      |          | I?OL == ---- |                            |
      |          \         R?OL /                            |
      |                                                      |
      | ( 3.1a ) /         V?OL \     ( V?L == I?T * X?L )   |
      |          | I?OL == ---- |                            |
      |          \         R?OL /                            |
      |                                                      |
      | ( 3.1b ) /         V?OL \     ( V?C == I?T * X?C )   |
      |          | I?OL == ---- |                            |
      |          \         R?OL /                            |
      |                                                      |
      | ( 14.1 ) ( V?S == V?L - V?C ) ( No Transformation )  |
      \                                                      /
      
      === STEPS (CODE VIEW) ===
       1: (3.1) I?OL == V?OL/R?OL
       2: (3.1a) I?OL == V?OL/R?OL ==> V?L == I?T*X?L
       3: (3.1b) I?OL == V?OL/R?OL ==> V?C == I?T*X?C
       4: (14.1) V?S == V?L - V?C
       5: X?L := 80~Ω ==> 80~Ω
       6: X?C := 55~Ω ==> 55~Ω
       7: I?T := 50~mA ==> 50~mA
       8: V?L := EvaluateFormula(f3?1a, V) ==> 4~V
       9: V?C := EvaluateFormula(f3?1b, V) ==> 2.75~V
      10: V?S := EvaluateFormula(f14?1) ==> 1.25~V
      11: ϴ?V?S := LCSeriesPhase(V?L, V?C) ==> 90~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 7"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (3.1) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(I?OL_ == (V?OL_/R?OL_)))) !=? []);
    }

    FoldGrade("Formula (14.1) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(V?S_ == (V?L_ - V?C_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "V?L", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?L, 4~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "V?C", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?C, 2.75~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?S, 1.25~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?V?S, 90~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 7",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (3.1) is used. (1/1)
        PASS: Formula (14.1) is used. (1/1)
        PASS: A correct value is assigned to V?L. (1/1)
        PASS: A correct value is assigned to V?C. (1/1)
        PASS: A correct value is assigned to V?S. (1/1)
        PASS: A correct value is assigned to ϴ?V?S. (1/1)
      
        13/13 passes
.   %/output

%/group








%group,name="Problem 9",description="p.456."
========================================================================================================

[V?L, V?C, V?S, ϴ?V?S]


%mathpiper,name="Problem 9",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbVj9MLCBWP0MsIFY/Uywgz7Q/Vj9TXSkKewogICAgRm9ybXVsYXMoKQogICAgeyAgIAogICAgICAgIGYxMD8xNCA6PSBGb3JtdWxhKFg/TH7OqSA9PSAyICogUGkgKiBmP2Z+SHogKiBMP0x+SCwgTGFiZWw6IjEwLjE0IiwgUGFnZToiMzAyIik7CiAgICAgICAgCiAgICAgICAgZjEyPzExIDo9IEZvcm11bGEoWD9Dfs6pID09IDEvKDIgKiBQaSAqIGY/Zn5IeiAqIEM/Q35GKSwgTGFiZWw6IjEyLjExIiwgUGFnZToiMzc3Iik7CiAgICAgICAgCiAgICAgICAgZjM/MSA6PSBGb3JtdWxhKEk/T0x+QSA9PSBWP09MflYvUj9PTH7OqSwgTGFiZWw6IjMuMSIsIFBhZ2U6Ijc4Iik7CgogICAgICAgIGYzPzFhIDo9IEZvcm11bGEoZjM/MSwKICAgICAgICAgICAgICAgICAgICAgICAgTGFiZWw6ImEiLCAKICAgICAgICAgICAgICAgICAgICAgICAgU3Vic3RpdHV0aW9uczpbJ0k/T0wgPC0gJ0k/VCwgJ1Y/T0wgPC0gJ1Y/TCwgJ1I/T0wgPC0gJ1g/TF0sCiAgICAgICAgICAgICAgICAgICAgICAgIFN1YmplY3Q6J1Y/TCk7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIGYzPzFiIDo9IEZvcm11bGEoZjM/MSwKICAgICAgICAgICAgICAgICAgICAgICAgTGFiZWw6ImIiLCAKICAgICAgICAgICAgICAgICAgICAgICAgU3Vic3RpdHV0aW9uczpbJ0k/T0wgPC0gJ0k/VCwgJ1Y/T0wgPC0gJ1Y/QywgJ1I/T0wgPC0gJ1g/Q10sCiAgICAgICAgICAgICAgICAgICAgICAgIFN1YmplY3Q6J1Y/Qyk7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIGYxND8xIDo9IEZvcm11bGEoVj9TflYgPT0gVj9MflYgLSBWP0N+ViwgTGFiZWw6IjE0LjEiLCBQYWdlOiI0MjQiKTsKICAgIH0KICAgIAogICAgZj9mIDo9IDF+a0h6OwogICAgCiAgICBMP0wgOj0gNDd+bUg7CiAgICAKICAgIEM/QyA6PSAxfs68RjsKICAgIAogICAgWD9MIDo9IEV2YWx1YXRlRm9ybXVsYShmMTA/MTQpOwogICAgCiAgICBYP0MgOj0gRXZhbHVhdGVGb3JtdWxhKGYxMj8xMSk7CiAgICAKICAgIEk/VCA6PSA4fm1BOwogICAgCiAgICBWP0wgOj0gRXZhbHVhdGVGb3JtdWxhKGYzPzFhLCBWKTsKICAgIAogICAgVj9DIDo9IEV2YWx1YXRlRm9ybXVsYShmMz8xYiwgVik7CiAgICAKICAgIFY/UyA6PSBFdmFsdWF0ZUZvcm11bGEoZjE0PzEpOwogICAgCiAgICDPtD9WP1MgOj0gTENTZXJpZXNQaGFzZShWP0wsIFY/Qyk7Cn0KCg==");

%/mathpiper

    %output,parent="Problem 9",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 9",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([V?L, V?C, V?S, ϴ?V?S])
{
    Formulas()
    {
        f10?14 := Formula(X?L~Ω == 2*Pi*f?f~Hz*L?L~H, Label:"10.14", Page:"302");
        
        f12?11 := Formula(X?C~Ω == 1/(2*Pi*f?f~Hz*C?C~F), Label:"12.11", Page:"377");
        
        f3?1 := Formula(I?OL~A == V?OL~V/R?OL~Ω, Label:"3.1", Page:"78");
        
        f3?1a := Formula(f3?1, Label:"a", Substitutions:['I?OL <- 'I?T, 'V?OL <- 'V?L, 'R?OL <- 'X?L], Subject: 'V?L);
        
        f3?1b := Formula(f3?1, Label:"b", Substitutions:['I?OL <- 'I?T, 'V?OL <- 'V?C, 'R?OL <- 'X?C], Subject: 'V?C);
        
        f14?1 := Formula(V?S~V == V?L~V - V?C~V, Label:"14.1", Page:"424", Description:"Series.");
    }
    
    f?f := 1~kHz;
    
    L?L := 47~mH;
    
    C?C := 1~μF;
    
    X?L := EvaluateFormula(f10?14);
    
    X?C := EvaluateFormula(f12?11);
    
    I?T := 8~mA;
    
    V?L := EvaluateFormula(f3?1a, V);
    
    V?C := EvaluateFormula(f3?1b, V);
    
    V?S := EvaluateFormula(f14?1);
    
    ϴ?V?S := LCSeriesPhase(V?L, V?C);
}
%/mathpiper

    %output,parent="Problem 9",mpversion="281",preserve="false"
      Result: 90~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      V?L: 2.362477676~V
      V?C: 1.273239545~V
      V?S: 1.089238131~V
      ϴ?V?S: 90~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                                \
      | ( 10.14 ) ( X?L == 2 * Pi * f?f * L?L ) ( No Transformation )  |
      |                                                                |
      | ( 12.11 ) /                1          \ ( No Transformation )  |
      |           | X?C == ------------------ |                        |
      |           \        2 * Pi * f?f * C?C /                        |
      |                                                                |
      | ( 3.1 )   /         V?OL \              ( No Transformation )  |
      |           | I?OL == ---- |                                     |
      |           \         R?OL /                                     |
      |                                                                |
      | ( 3.1a )  /         V?OL \              ( V?L == I?T * X?L )   |
      |           | I?OL == ---- |                                     |
      |           \         R?OL /                                     |
      |                                                                |
      | ( 3.1b )  /         V?OL \              ( V?C == I?T * X?C )   |
      |           | I?OL == ---- |                                     |
      |           \         R?OL /                                     |
      |                                                                |
      | ( 14.1 )  ( V?S == V?L - V?C )          ( No Transformation )  |
      \                                                                /
      
      === STEPS (CODE VIEW) ===
       1: (10.14) X?L == 2*Pi*f?f*L?L
       2: (12.11) X?C == 1/(2*Pi*f?f*C?C)
       3: (3.1) I?OL == V?OL/R?OL
       4: (3.1a) I?OL == V?OL/R?OL ==> V?L == I?T*X?L
       5: (3.1b) I?OL == V?OL/R?OL ==> V?C == I?T*X?C
       6: (14.1) V?S == V?L - V?C
       7: f?f := 1~kHz ==> 1~kHz
       8: L?L := 47~mH ==> 47~mH
       9: C?C := 1~μF ==> 1~μF
      10: X?L := EvaluateFormula(f10?14) ==> 295.3097095~(kHz*mH)
      11: X?C := EvaluateFormula(f12?11) ==> 0.1591549431~((1~kHz*μF)^(-1))
      12: I?T := 8~mA ==> 8~mA
      13: V?L := EvaluateFormula(f3?1a, V) ==> 2.362477676~V
      14: V?C := EvaluateFormula(f3?1b, V) ==> 1.273239545~V
      15: V?S := EvaluateFormula(f14?1) ==> 1.089238131~V
      16: ϴ?V?S := LCSeriesPhase(V?L, V?C) ==> 90~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 9"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (10.14) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(X?L_ == (((2*Pi)*f?f_)*L?L_)))) !=? []);
    }

    FoldGrade("Formula (12.11) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(X?C_ == (1/(((2*Pi)*f?f_)*C?C_))))) !=? []);
    }

    FoldGrade("Formula (3.1) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(I?OL_ == (V?OL_/R?OL_)))) !=? []);
    }

    FoldGrade("Formula (14.1) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(V?S_ == (V?L_ - V?C_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "V?L", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?L, 2.362477676~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "V?C", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?C, 1.273239545~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(V?S, 1.089238131~V), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?V?S", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?V?S, 90~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 9",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (10.14) is used. (1/1)
        PASS: Formula (12.11) is used. (1/1)
        PASS: Formula (3.1) is used. (1/1)
        PASS: Formula (14.1) is used. (1/1)
        PASS: A correct value is assigned to V?L. (1/1)
        PASS: A correct value is assigned to V?C. (1/1)
        PASS: A correct value is assigned to V?S. (1/1)
        PASS: A correct value is assigned to ϴ?V?S. (1/1)
      
        15/15 passes
.   %/output

%/group







%group,name="Problem 11",description="p.457."
========================================================================================================

[I?T, ϴ?I?T]


%mathpiper,name="Problem 11",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbST9ULCDPtD9JP1RdKQp7CiAgICBGb3JtdWxhcygpCiAgICB7ICAgCiAgICAgICAgZjE0PzMgOj0gRm9ybXVsYShJP1R+QSA9PSBJP0N+QSAtIEk/TH5BLCBMYWJlbDoiMTQuMyIsIFBhZ2U6IjQyOCIsIERlc2NyaXB0aW9uOiJQYXJhbGxlbC4iKTsKICAgIH0KICAgIAogICAgST9MIDo9IDU2fm1BOwogICAgCiAgICBJP0MgOj0gOX5tQTsKICAgIAogICAgST9UIDo9IEFicyhFdmFsdWF0ZUZvcm11bGEoZjE0PzMpKTsKCiAgICDPtD9JP1QgOj0gTENQYXJhbGxlbFBoYXNlKEk/TCwgST9DKTsKfQoK");

%/mathpiper

    %output,parent="Problem 11",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 11",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([I?T, ϴ?I?T])
{
    Formulas()
    {
        f14?3 := Formula(I?T~A == I?C~A - I?L~A, Label:"14.3", Page:"428", Description:"Parallel.");
    }
    
    I?L := 56~mA;
    
    I?C := 9~mA;
    
    I?T := Abs(EvaluateFormula(f14?3));
    
    ϴ?I?T := LCParallelPhase(I?L, I?C);
}
%/mathpiper

    %output,parent="Problem 11",mpversion="281",preserve="false"
      Result: (-90)~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      I?T: 47~mA
      ϴ?I?T: (-90)~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                      \
      | ( 14.3 ) ( I?T == I?C - I?L ) ( No Transformation )  |
      \                                                      /
      
      === STEPS (CODE VIEW) ===
       1: (14.3) I?T == I?C - I?L
       2: I?L := 56~mA ==> 56~mA
       3: I?C := 9~mA ==> 9~mA
       4: I?T := Abs(EvaluateFormula(f14?3)) ==> 47~mA
       5: ϴ?I?T := LCParallelPhase(I?L, I?C) ==> (-90)~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 11"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (14.3) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(I?T_ == (I?C_ - I?L_)))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "I?T", 1, False)
    {
        ExceptionCatch(UnitsEqual?(I?T, 47~mA), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?I?T", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?I?T, (-90)~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 11",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (14.3) is used. (1/1)
        PASS: A correct value is assigned to I?T. (1/1)
        PASS: A correct value is assigned to ϴ?I?T. (1/1)
      
        10/10 passes
.   %/output

%/group







%group,name="Problem 13",description="p.457."
========================================================================================================

[X?P, ϴ?X?P]


%mathpiper,name="Problem 13",subtype="hint"

Hint("ClByb2JsZW1Tb2x1dGlvbihbWD9QLCDPtD9YP1BdKQp7CiAgICBGb3JtdWxhcygpCiAgICB7ICAgCiAgICAgICAgZjE0PzUgOj0gRm9ybXVsYShYP1B+zqkgPT0gKFg/TH7OqSAqIC1YP0N+zqkpLyhYP0x+zqkgKyAtWD9Dfs6pKSwgTGFiZWw6IjE0LjUiLCBQYWdlOiI0MzAiLCBEZXNjcmlwdGlvbjoiUGFyYWxsZWwuIik7CiAgICB9CiAgICAKICAgIFg/TCA6PSAzMDB+zqk7CiAgICAKICAgIFg/QyA6PSAxODB+zqk7CiAgICAKICAgIFg/UCA6PSBBYnMoRXZhbHVhdGVGb3JtdWxhKGYxND81LCDOqSkpOyAvL3RvZG86dGs6c2hvdWxkIHRoZSBBYnMgYmUgdXNlZCBoZXJlIG9yIHBsYWNlZCBpbnRvIHRoZSBmb3JtdWxhPwoKICAgIM+0P1g/UCA6PSBMQ1BhcmFsbGVsUGhhc2UoWD9MLCBYP0MpOwp9Cgo=");

%/mathpiper

    %output,parent="Problem 13",mpversion="281",preserve="false"
      Result: True
.   %/output




%mathpiper,name="Problem 13",subtype="problem",unassign_all="true",globalStateShow="true"

ProblemSolution([X?P, ϴ?X?P])
{
    Formulas()
    {
        f14?5 := Formula(X?P~Ω == (X?L~Ω * -X?C~Ω)/(X?L~Ω + -X?C~Ω), Label:"14.5", Page:"430", Description:"Parallel.");
    }
    
    X?L := 300~Ω;
    
    X?C := 180~Ω;
    
    X?P := Abs(EvaluateFormula(f14?5, Ω));
    
    ϴ?X?P := LCParallelPhase(X?L, X?C);
}
%/mathpiper

    %output,parent="Problem 13",mpversion="281",preserve="false"
      Result: (-90)~deg
      
      Side Effects:
      === SOLUTION VARIABLES ===
      X?P: 450~Ω
      ϴ?X?P: (-90)~deg
      
      === FORMULAS (2D VIEW) ===
      /                                                           \
      | ( 14.5 ) /        X?L * -( X?C ) \ ( No Transformation )  |
      |          | X?P == -------------- |                        |
      |          \        X?L + -( X?C ) /                        |
      \                                                           /
      
      === STEPS (CODE VIEW) ===
       1: (14.5) X?P == (X?L*-X?C)/(X?L +  -X?C)
       2: X?L := 300~Ω ==> 300~Ω
       3: X?C := 180~Ω ==> 180~Ω
       4: X?P := Abs(EvaluateFormula(f14?5, Ω)) ==> 450~Ω
       5: ϴ?X?P := LCParallelPhase(X?L, X?C) ==> (-90)~deg
      
      
.   %/output





%mathpiper_grade,name="Problem 13"

{
    FoldGrade("MathPiper version >= 281", 1, True)
    {
        StringToNumber(Version()) >=? 281;
    }

    FoldGrade("The code does not throw an exception when evaluated", 1, True)
    {
        ExceptionCatch( PipeToString() Eval(?foldCode[1]), "", 'Exception) !=? 'Exception;
    }

    FoldGrade("Formula (14.4) is used", 1, False)
    {
        (PositionsPattern2(UnitsStrip(?foldCode), ( '(X?P_ == ((X?L_*(-X?C_))/(X?L_ + (-X?C_)))))) !=? []);
    }

    FoldGrade("A correct value is assigned to " + "X?P", 1, False)
    {
        ExceptionCatch(UnitsEqual?(X?P, 450~Ω), "", ExceptionGet()["message"]);
    }

    FoldGrade("A correct value is assigned to " + "ϴ?X?P", 1, False)
    {
        ExceptionCatch(UnitsEqual?(ϴ?X?P, (-90)~deg), "", ExceptionGet()["message"]);
    }
}

%/mathpiper_grade

    %output,parent="Problem 13",mpversion="281",preserve="false"
      Result: True
      
      Side Effects:
        PASS: The code does not throw an exception when parsed. (1/1)
        PASS: The fold is not empty. (1/1)
        PASS: The ':' operator is not used to assign a value to a variable. (1/1)
        PASS: The results of all arithmetic operations are assigned to a variable. For example 'count := (count + 1) is okay, but (count + 1) by itself not okay. (1/1)
        PASS: The version of "Append" that does not end with a '!' is not used. (1/1)
        ------------------------------------------
        PASS: MathPiper version >= 281. (1/1)
        PASS: The code does not throw an exception when evaluated. (1/1)
        PASS: Formula (14.4) is used. (1/1)
        PASS: A correct value is assigned to X?P. (1/1)
        PASS: A correct value is assigned to ϴ?X?P. (1/1)
      
        10/10 passes
.   %/output

%/group

